#パッケージ管理について
※詳細については下記URL参照
https://qiita.com/takeshisakuma/items/e9685fb9e394212247c0

#パッケージ管理システムを使うメリット
・ターミナルからインストール、アンインストールができる
・アップデートをまとめて行える
・OSの再インストール時など環境移行時に一括でインストールできる

#使用ツール
ツール        ：管理対象
Homebrew     ：CUIアプリ
Homebrew Cask：GUIアプリ
mas-cli      ：Mac App Storeにあるアプリ
※Homebrew Caskとmas-cliでは、同じアプリが含まれる場合があるので、
その場合どちらで管理するか決めておく

#パッケージマネージャーのインストール
#準備
Homebrewを使うにはXcodeが必要
#Xcodeのインストール
※ターミナルを起動し、下記コマンド実行
xcode-select --install
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
※Homebrewから最新のものをコピー
HomebrewURL：https://brew.sh/index_ja
※Homebrewをインストールする場所に権限が無いと表示される場合は、下記コマンド実行
sudo chown -R $(whoami):admin /usr/local
#mas-cliのインストール
brew install mas

#パッケージのインストール
brew install (package name)
brew install --cask (package name)
mas install (package ID)
※IDは、URL末尾の「id406056744?mt=12」のような文字列のidと?の間の数字
mas-cliでのインストールは、Apple IDと紐付けるため一度App Storeから入手しておく必要がある
Affinity DesignerなどのようにApp Storeと販売元が併売している場合、
販売元から直接購入するとmasでのインストールはできない
#インストール時にディレクトリが存在しないというエラーが出る場合
フォルダを作成し、権限を付ける
sudo mkdir /usr/local/(directory name)
sudo chown -R $(whoami) /usr/local/(directory name)
#パッケージのアンインストール
brew uninstall (package name)
brew cask uninstall (package name)
mas uninstall (package ID)
#アップデートがあるパッケージ一覧
brew outdated
brew cask outdated
brew cask upgrade --dry-run `brew cask list`
mas outdated
#パッケージのアップデート
brew upgrade
brew upgrade --cask
※下記のWarningが出てしまった場合
Warning: Calling brew cask upgrade is deprecated! Use brew upgrade --cask instead.
brew upgrade --cask --greedy
mas upgrade
#brew doctorで下記warningが出た場合
Warning: You have unlinked kegs in your Cellar.
Leaving kegs unlinked can lead to build-trouble and cause formulae that depend on
those kegs to fail to run properly once built. Run `brew link` on these:
  docker-compose
※どちらか実行
To force the link and overwrite all conflicting files:
  brew link --overwrite docker-compose
To list all files that would be deleted:
  brew link --overwrite --dry-run docker-compose
Warning: Some installed formulae are deprecated or disabled.
You should find replacements for the following formulae:
  docker-machine
警告で表示されているバージョンをアンインストール
brew uninstall docker-machine
#インストール済みパッケージ一覧
brew list
brew cask list
mas list
#インストールしたパッケージの管理状態診断
brew doctor
※You have unlinked kags in your Cellarと表示されたらリンクを修正
brew unlink (package name)
brew link (package name)
※下記のoverwriteでも可能
brew link --overwrite (package name)
brew cleanup
※下記のconfigのWarningが出た場合は「.bash_profile」にaliasを追記する
Warning: "config" scripts exist outside your system or Homebrew directories.
参考：https://qiita.com/takuya0301/items/695f42f6904e979f0152
alias brew="PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin brew"
※「export PATH=xxxx」より前に記述すること
#環境移行
#Brawfileの生成
brew bundle dump
#Brewfileからパッケージをインストール
brew bundle

#インストールしたアプリが起動できないとき
Homebrewに限ったことではないが、
Mac App Store以外からインストールしたアプリを起動しようとすると、
「悪質なソフトウェアか確認できないため開けません」と表示される場合がある
その場合はControlキーを押しながら起動すると、再度「悪質な～」のウィンドウが表示されるが、
「開く」ボタンが追加されているので、クリックすると開ける
一度起動すると、次からは最初から開ける

#nodebrewをインストール
brew install nodebrew
#nodebrewバージョンを確認
nodebrew -v
#Node.jsをインストール
mkdir -p ~/.nodebrew/src
nodebrew install-binary latest
nodebrew list
#インストールしたバージョンを使えるようにする
nodebrew use v14.0.0
#node, npmコマンドを設定
ls $HOME/.nodebrew/current/bin
echo 'export PATH=$PATH:$HOME/.nodebrew/current/bin' >> ~/.bash_profile
#反映
source .bash_profile
#npmとnodoを確認
npm -v
node -v